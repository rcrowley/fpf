#!/bin/sh

#/ Usage: fpf-satisfy-deps [--prefix=<prefix>] <name>
#/   --prefix=<prefix> installation prefix
#/   <name>            package name

set -e

. "$(dirname "$(dirname "$0")")/lib/fpf.sh"

# The default prefix is the one in which the FPF tools are installed.
PREFIX="$(dirname "$(dirname "$0")")"

usage() {
	grep "^#/" "$0" | cut -c"4-" >&2
	exit "$1"
}
while [ "$#" -gt 0 ]
do
	case "$1" in
		--prefix) PREFIX="$2" shift 2;;
		--prefix=*) PREFIX="$(echo "$1" | cut -c"10-")" shift;;
		-h|--help) usage 0;;
		-*) usage 1;;
		*) break;;
	esac
done
NAME="$1" shift || usage 1
[ -z "$PREFIX" -o -z "$NAME" ] && usage 1

# It's critical that the prefix be fully-qualified or Git will lose track
# of itself by changing its working directory.
PREFIX="$(cd "$PREFIX" && pwd)"

# Verify that the package is in FPF's library directory.  Since satisfying
# dependencies only requires metadata, it doesn't actually need to be fully
# installed.  Export `GIT_DIR` for subsequent `git`(1) commands.
export GIT_DIR="$PREFIX/lib/fpf/$NAME.git"
if [ ! -d "$GIT_DIR" ]
then echo "fpf: $NAME is not installed" >&2 && exit 1
fi

$(dirname "$0")/fpf-ls-deps --prefix="$PREFIX" "$NAME" |
while read MANAGER PACKAGE VERSION PINNED
do
	git config "$MANAGER.$PACKAGE.rollback-version" "$(case "$MANAGER" in
		"apt") fpf_dpkg_version "$PACKAGE";;
		"yum") fpf_rpm_version "$PACKAGE";;
		"cpan") echo "fpf: CPAN has no idea what version is installed" >&2;;
		"gem") sudo gem list "$PACKAGE" | awk -F"[(),]" '{print $2}';;
		"npm") npm ls | grep "^└── $PACKAGE@" | cut -d"@" -f"2";;
		"pear"|"pecl")
			sudo "$MANAGER" info "$PACKAGE" |
			grep "^Release Version" |
			awk '{print $3}';;
		"pip") sudo pip freeze | grep "^$PACKAGE" | cut -d"=" -f"3";;
		"fpa") git --git-dir="$PREFIX/lib/$PACKAGE.git" config "fpf.version";;
	esac)"
	if [ "$PINNED" ]
	then
		case "$MANAGER" in
			"apt") sudo apt-get -y install "$PACKAGE=$VERSION";;
			"yum") sudo yum -y install "$PACKAGE-$VERSION";;
			"cpan")
				echo "fpf: CPAN can only install the latest version" >&2
				cpan install "$PACKAGE";;
			"gem")
				gem list -i -q -v"$VERSION" "$PACKAGE" >"/dev/null" ||
				sudo gem install -v"$VERSION" "$PACKAGE";;
			"npm")
				mkdir -p "$PREFIX/lib"
				(cd "$PREFIX/lib" && npm install "$PACKAGE@$VERSION");;
			"pear"|"pecl") sudo "$MANAGER" install "$PACKAGE-$VERSION";;
			"pip") sudo pip install "$PACKAGE==$VERSION";;
			"fpa") fpa-install --prefix="$PREFIX" -p -v"$VERSION" "$PACKAGE";;
		esac
	else
		case "$MANAGER" in
			"apt") sudo apt-get -y install "$PACKAGE";;
			"yum") sudo yum -y install "$PACKAGE";;
			"cpan") cpan install "$PACKAGE";;
			"gem")
				gem list -i -q -v">= $VERSION" "$PACKAGE" >"/dev/null" ||
				sudo gem install -v">= $VERSION" "$PACKAGE";;
			"npm")
				mkdir -p "$PREFIX/lib"
				(cd "$PREFIX/lib" && npm install "$PACKAGE@>=$VERSION");;
			"pear"|"pecl") sudo "$MANAGER" uninstall "$PACKAGE";;
			"pip") sudo pip install "$PACKAGE";;
			"fpa") fpa-install --prefix="$PREFIX" "$PACKAGE";;
		esac
	fi
done
