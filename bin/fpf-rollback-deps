#!/bin/sh

#/ Usage: fpf-rollback-deps [--prefix=<prefix>] <name>
#/   --prefix=<prefix> installation prefix
#/   <name>            package name

set -e

. "$(dirname "$(dirname "$0")")/lib/fpf.sh"

# The default prefix is the one in which the FPF tools are installed.
PREFIX="$(dirname "$(dirname "$0")")"

usage() {
	grep "^#/" "$0" | cut -c"4-" >&2
	exit "$1"
}
while [ "$#" -gt 0 ]
do
	case "$1" in
		--prefix) PREFIX="$2" shift 2;;
		--prefix=*) PREFIX="$(echo "$1" | cut -c"10-")" shift;;
		-h|--help) usage 0;;
		-*) usage 1;;
		*) break;;
	esac
done
NAME="$1" shift || usage 1
[ -z "$PREFIX" -o -z "$NAME" ] && usage 1

# It's critical that the prefix be fully-qualified or Git will lose track
# of itself by changing its working directory.
PREFIX="$(cd "$PREFIX" && pwd)"

# Verify that the package is in FPF's library directory.  Since satisfying
# dependencies only requires metadata, it doesn't actually need to be fully
# installed.  Export `GIT_DIR` for subsequent `git`(1) commands.
export GIT_DIR="$PREFIX/lib/fpf/$NAME.git"
if [ ! -d "$GIT_DIR" ]
then echo "fpf: $NAME is not installed" >&2 && exit 1
fi

$(dirname "$0")/fpf-ls-deps --prefix="$PREFIX" "$NAME" |
tac |
while read MANAGER PACKAGE VERSION PINNED
do

	# Only dependencies that specify a rollback-version (even if it's the
	# empty string) are eligible for rollback.
	git config "$MANAGER.$PACKAGE.rollback-version" || continue

	ROLLBACK_VERSION="$(git config "$MANAGER.$PACKAGE.rollback-version")"
	if [ "$ROLLBACK_VERSION" ]
	then
		case "$MANAGER" in
			"apt") sudo apt-get -y install "$PACKAGE=$ROLLBACK_VERSION";;
			"yum") sudo yum -y install "$PACKAGE-$ROLLBACK_VERSION";;
			"cpan") echo "fpf: CPAN can't remove modules" >&2;;
			"gem")
				yes y | sudo gem uninstall -a "$PACKAGE"
				sudo gem install -v"$ROLLBACK_VERSION" "$PACKAGE";;
			"npm") ;; # TODO
			"pear"|"pecl")
				sudo "$MANAGER" uninstall "$PACKAGE"
				sudo "$MANAGER" install "$PACKAGE-$ROLLBACK_VERSION";;
			"pip") sudo pip install "$PACKAGE==$ROLLBACK_VERSION";;
			"fpf")
				fpf-remove --prefix="$PREFIX" "$PACKAGE"
				fpf-install --prefix="$PREFIX" -p -v"$VERSION" "$PACKAGE";;
		esac
	else
		case "$MANAGER" in
			"apt") sudo apt-get -y remove "$PACKAGE";;
			"yum") sudo yum -y remove "$PACKAGE";;
			"cpan") echo "fpf: CPAN can't remove modules" >&2;;
			"gem") yes y | sudo gem uninstall -a "$PACKAGE";;
			"npm") ;; # TODO
			"pear"|"pecl") sudo "$MANAGER" uninstall "$PACKAGE";;
			"pip") yes y | sudo pip uninstall "$PACKAGE";;
			"fpf") fpf-remove --prefix="$PREFIX" "$PACKAGE";;
		esac
	fi
done
